services:
  db:
    image: postgres:16-alpine
    container_name: veridy_dev_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - ${DB_PORT}
    networks:
      - compose_network

  kubo:
    image: ipfs/kubo:v0.35.0
    container_name: veridy_dev_kubo
    environment:
      IPFS_PROFILE: "server"
    command:
      - daemon
      - --migrate=true
      - --enable-gc=true
      - --enable-pubsub-experiment
    volumes:
      - ipfs_data:/data/ipfs
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    networks:
      - compose_network

  django:
    build: .
    image: django_image
    container_name: veridy_dev_django
    environment:
      ENVIRONMENT: development
      SECRET_KEY: ${DJANGO_SECRET_KEY}
      ADMIN_USERS: /run/secrets/admin_users
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    secrets:
      - admin_users
    volumes:
      - ./django_server:/app/django_server
      - media_volume:/media
    ports:
      - "${DJANGO_PORT}:8000"
    networks:
      - compose_network
    depends_on:
      - db
      - kubo

volumes:
  db_data:
    name: veridy_dev_db_data
    driver: local
  ipfs_data:
    name: veridy_dev_ipfs_data
    driver: local
  media_volume:
    name: veridy_dev_media_volume
    driver: local

networks:
  compose_network:
    name: veridy_dev_network
    driver: bridge

secrets:
  admin_users:
    file: .secrets/admin_users.json
